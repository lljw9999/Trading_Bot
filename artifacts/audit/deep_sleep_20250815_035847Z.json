{
  "timestamp": "2025-08-15T03:58:47.656038+00:00",
  "event_type": "deep_sleep",
  "action": "sleep_blocked",
  "dry_run": true,
  "analysis": {
    "red_coverage": 1.0,
    "next_green_window": null,
    "sleep_eligible": false
  },
  "savings_projection": {
    "cost_per_hour_baseline": 4.400197499999999,
    "total_savings_pct": 1.0,
    "total_hourly_savings": 4.400197499999999,
    "sleep_duration_minutes": 60,
    "total_sleep_savings": 4.400197499999999,
    "service_breakdown": {
      "policy_server": {
        "hourly_cost": 1.7600789999999997,
        "sleep_savings": 1.7600789999999997,
        "savings_pct": 0.4
      },
      "feature_bus": {
        "hourly_cost": 1.1000493749999998,
        "sleep_savings": 1.1000493749999998,
        "savings_pct": 0.25
      },
      "heavy_exporters": {
        "hourly_cost": 0.6600296249999998,
        "sleep_savings": 0.6600296249999998,
        "savings_pct": 0.15
      },
      "triton_server": {
        "hourly_cost": 0.8800394999999999,
        "sleep_savings": 0.8800394999999999,
        "savings_pct": 0.2
      }
    }
  },
  "execution_results": {
    "reason": "criteria_not_met"
  },
  "services_config": {
    "policy_server": {
      "description": "RL policy inference server",
      "cost_savings_pct": 0.4,
      "stop_command": "pkill -f 'policy_server'",
      "start_command": "python src/rl/policy_server.py &"
    },
    "feature_bus": {
      "description": "Real-time feature pipeline",
      "cost_savings_pct": 0.25,
      "stop_command": "pkill -f 'feature_bus'",
      "start_command": "python src/layers/layer0_data_ingestion/feature_bus.py &"
    },
    "heavy_exporters": {
      "description": "GPU monitoring exporters",
      "cost_savings_pct": 0.15,
      "stop_command": "pkill -f 'gpu_exporter|model_exporter'",
      "start_command": "python src/monitoring/gpu_exporter.py & python src/monitoring/model_exporter.py &"
    },
    "triton_server": {
      "description": "ONNX model inference server",
      "cost_savings_pct": 0.2,
      "stop_command": "docker stop triton-server",
      "start_command": "docker start triton-server"
    }
  },
  "criteria": {
    "red_coverage_threshold": 0.9,
    "min_sleep_duration_minutes": 30,
    "wake_lookahead_minutes": 15
  }
}